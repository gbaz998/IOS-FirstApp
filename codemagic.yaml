workflows:
  ios_to_testflight:
    name: iOS â†’ TestFlight

    integrations:
      app_store_connect: "gbaz 15/9"

    environment:
      xcode: 16.4
      groups: [gbaz]
      vars:
        XCODE_PROJECT: "HelloWorld.xcodeproj"
        XCODE_SCHEME: "HelloWorld"
        BUNDLE_ID: "au.gbaz.app"

    scripts:
      - name: Codesign
        script: |
          set -e
          keychain initialize
          app-store-connect fetch-signing-files "$BUNDLE_ID" --type IOS_APP_STORE --create
          keychain add-certificates
          xcode-project use-profiles

      - name: Set iOS 12.0 target + heal Assets.xcassets
        script: |
          set -e
          PBX="HelloWorld.xcodeproj/project.pbxproj"
          /usr/bin/sed -i '' -E 's/IPHONEOS_DEPLOYMENT_TARGET = [0-9]+(\.[0-9]+)?/IPHONEOS_DEPLOYMENT_TARGET = 12.0/g' "$PBX" || true
          CATALOG="HelloWorld/Assets.xcassets"
          APPICON="$CATALOG/AppIcon.appiconset"
          [ -e "$CATALOG" ] && [ ! -d "$CATALOG" ] && mv -f "$CATALOG" "${CATALOG}.bak.$(date +%s)"
          mkdir -p "$APPICON"
          [ -f "$CATALOG/Contents.json" ] || printf '%s\n' '{ "info": { "version": 1, "author": "xcode" } }' > "$CATALOG/Contents.json"
          if [ ! -f "$APPICON/Contents.json" ] || ! plutil -lint "$APPICON/Contents.json" >/dev/null 2>&1; then
            printf '%s\n' '{ "images":[{"idiom":"ios-marketing","size":"1024x1024","scale":"1x","filename":"AppIcon-1024.png"}], "info":{"version":1,"author":"xcode"} }' > "$APPICON/Contents.json"
          fi
          [ -f "$APPICON/AppIcon-1024.png" ] || /usr/bin/sips -s format png --resampleHeightWidth 1024 1024 /System/Library/CoreServices/DefaultDesktop.jpg --out "$APPICON/AppIcon-1024.png" >/dev/null 2>&1 || true
          /usr/bin/sed -i '' 's/ASSETCATALOG_COMPILER_APPICON_NAME = [^;]*/ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon/' "$PBX" || true

      - name: Ensure Info.plist + keys
        script: |
          set -e
          PLIST="IOS-FirstApp/Info.plist"
          mkdir -p "$(dirname "$PLIST")"
          [ -f "$PLIST" ] || printf '%s' '<?xml version="1.0" encoding="UTF-8"?><plist version="1.0"><dict/></plist>' > "$PLIST"
          ensure() { /usr/libexec/PlistBuddy -c "Set :$1 \"$2\"" "$PLIST" 2>/dev/null || /usr/libexec/PlistBuddy -c "Add :$1 string \"$2\"" "$PLIST"; }
          ensure UIMainStoryboardFile Main
          ensure UILaunchStoryboardName LaunchScreen
          ensure NSLocationWhenInUseUsageDescription 'We use your location to place discoveries on the map.'
          ensure NSMicrophoneUsageDescription 'Microphone is used for audio features.'
          ensure NSSpeechRecognitionUsageDescription 'Speech recognition is used for keyword detection.'
          plutil -lint "$PLIST"

      - name: Ensure valid storyboards
        script: |
          set -e
          IB="/Applications/Xcode-16.4.app/Contents/Developer/usr/bin/ibtool"
          mkdir -p HelloWorld/Base.lproj
          MAIN="HelloWorld/Base.lproj/Main.storyboard"
          LAUNCH="HelloWorld/Base.lproj/LaunchScreen.storyboard"
          make_main() { printf '%s' '<?xml version="1.0" encoding="UTF-8"?><document type="com.apple.InterfaceBuilder3.CocoaTouch.Storyboard.XIB" version="3.0" toolsVersion="20037" targetRuntime="iOS.CocoaTouch" initialViewController="rootNav"><scenes><scene sceneID="scene1"><objects><navigationController id="rootNav" sceneMemberID="viewController"><connections><segue destination="rootVC" kind="relationship" relationship="rootViewController" id="rel1"/></connections></navigationController><placeholder placeholderIdentifier="IBFirstResponder" id="res1" sceneMemberID="firstResponder"/></objects></scene><scene sceneID="scene2"><objects><viewController id="rootVC" sceneMemberID="viewController"><view key="view" contentMode="scaleToFill" id="view"><rect key="frame" x="0" y="0" width="390" height="844"/><autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/><color key="backgroundColor" white="1" alpha="1" colorSpace="calibratedWhite"/></view></viewController><placeholder placeholderIdentifier="IBFirstResponder" id="res2" sceneMemberID="firstResponder"/></objects></scene></scenes></document>'; }
          make_launch() { printf '%s' '<?xml version="1.0" encoding="UTF-8"?><document type="com.apple.InterfaceBuilder3.CocoaTouch.Storyboard.XIB" version="3.0" toolsVersion="20037" targetRuntime="iOS.CocoaTouch" launchScreen="YES"><scenes><scene sceneID="l1"><objects><viewController id="lvc" sceneMemberID="viewController"><view key="view" contentMode="scaleToFill" id="lview"><rect key="frame" x="0" y="0" width="390" height="844"/><autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/><color key="backgroundColor" white="1" alpha="1" colorSpace="calibratedWhite"/></view></viewController><placeholder placeholderIdentifier="IBFirstResponder" id="lr" sceneMemberID="firstResponder"/></objects></scene></scenes></document>'; }
          [ -f "$MAIN" ] || make_main > "$MAIN"
          [ -f "$LAUNCH" ] || make_launch > "$LAUNCH"
          "$IB" --compile /tmp/Main.cib "$MAIN"
          "$IB" --compile /tmp/Launch.cib "$LAUNCH"

      - name: Auto-bump build number
        script: |
          set -e
          PLIST="IOS-FirstApp/Info.plist"
          NEW_BUILD=$(date +%Y%m%d%H%M)
          /usr/libexec/PlistBuddy -c "Set :CFBundleVersion $NEW_BUILD" "$PLIST" 2>/dev/null || /usr/libexec/PlistBuddy -c "Add :CFBundleVersion string $NEW_BUILD" "$PLIST"

      - name: Build IPA
        script: |
          set -e
          xcode-project build-ipa --project "$XCODE_PROJECT" --scheme "$XCODE_SCHEME"
          mkdir -p build/ios/ipa
          IPA_SRC=$(find "$CM_BUILD_DIR" -type f -name "*.ipa" | head -n1 || true)
          [ -n "$IPA_SRC" ] && cp -f "$IPA_SRC" build/ios/ipa/HelloWorld.ipa || true

    artifacts:
      - build/ios/ipa/HelloWorld.ipa
      - "$CM_BUILD_DIR/*.ipa"
      - "$CM_BUILD_DIR/app.xcarchive"

    publishing:
      app_store_connect:
        auth: integration
        submit_to_testflight: true

