workflows:
  ios_to_testflight:
    name: iOS â†’ TestFlight
    integrations:
      app_store_connect: "gbaz-asc"
    environment:
      xcode: 16.4
      vars:
        XCODE_PROJECT: "HelloWorld.xcodeproj"
        XCODE_SCHEME: "HelloWorld"
        BUNDLE_ID: "au.gbaz.app"
        TEAM_ID: "8WPD9W2B39"
    scripts:
      - name: Prepare signing
        script: |
          app-store-connect fetch-signing-files "$BUNDLE_ID" --type IOS_APP_STORE
          keychain initialize
          keychain add-certificates
          xcode-project use-profiles

      - name: Force Swift 5.0
        script: |
          sed -i '' 's/SWIFT_VERSION = 3.0/SWIFT_VERSION = 5.0/g' "$XCODE_PROJECT/project.pbxproj"

      - name: Show schemes
        script: |
          echo "=== Schemes in project ==="
          xcodebuild -list -project "$XCODE_PROJECT" || true
          echo "=========================="

      - name: Show build settings
        script: |
          echo "=== Build settings (Release) ==="
          xcodebuild -showBuildSettings \
            -project "$XCODE_PROJECT" \
            -scheme "$XCODE_SCHEME" \
            -configuration Release 2>/dev/null | \
            egrep "PRODUCT_BUNDLE_IDENTIFIER|DEVELOPMENT_TEAM|CODE_SIGN_STYLE|PROVISIONING_PROFILE_SPECIFIER|CODE_SIGN_IDENTITY" || true
          echo "================================"

      - name: Build archive (diagnostic)
        script: |
          set -o pipefail
          xcodebuild \
            -project "$XCODE_PROJECT" \
            -scheme "$XCODE_SCHEME" \
            -configuration Release \
            -destination 'generic/platform=iOS' \
            -archivePath $CM_BUILD_DIR/app.xcarchive \
            clean archive | tee xcodebuild.log | xcpretty
    artifacts:
      - $CM_BUILD_DIR/app.xcarchive
      - xcodebuild.log

    publishing:
      app_store_connect:
        auth: integration
        submit_to_testflight: true
