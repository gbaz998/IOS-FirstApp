workflows:
  ios_to_testflight:
    name: iOS → TestFlight

    integrations:
      app_store_connect: "gbaz 15/9"

    environment:
      xcode: 16.4
      groups:
        - gbaz
      vars:
        XCODE_PROJECT: "HelloWorld.xcodeproj"
        XCODE_SCHEME: "HelloWorld"
        BUNDLE_ID: "au.gbaz.app"

    scripts:
      - name: Set up automatic codesigning
        script: |
          set -e
          keychain initialize
          app-store-connect fetch-signing-files "$BUNDLE_ID" --type IOS_APP_STORE --create
          keychain add-certificates
          xcode-project use-profiles

      - name: Normalize asset catalog layout (1/2)
        script: |
          set -e
          CATALOG="HelloWorld/Assets.xcassets"
          # If a file exists at the catalog path, back it up
          if [ -e "$CATALOG" ] && [ ! -d "$CATALOG" ]; then
            echo "Found non-directory at $CATALOG, backing up…"
            mv -f "$CATALOG" "${CATALOG}.bak.$(date +%s)"
          fi
          # Move lowercase root catalog into place if present
          if [ -d "assets.xcassets" ]; then
            mkdir -p "HelloWorld"
            mv -f "assets.xcassets" "$CATALOG"
          fi
          # Normalize common casing inside
          if [ -d "$CATALOG/appicon.appiconset" ]; then
            mv -f "$CATALOG/appicon.appiconset" "$CATALOG/AppIcon.appiconset"
          fi
          if [ -f "$CATALOG/AppIcon.appiconset/contents.json" ]; then
            mv -f "$CATALOG/AppIcon.appiconset/contents.json" "$CATALOG/AppIcon.appiconset/Contents.json"
          fi
          echo "=== Assets tree ==="
          find "$CATALOG" -maxdepth 2 -print || true

      - name: Update project references (2/2)
        script: |
          set -e
          PBXPROJ="HelloWorld.xcodeproj/project.pbxproj"
          # Make sure project points to the normalized paths/names
          /usr/bin/sed -i '' 's/assets\.xcassets/Assets.xcassets/g' "$PBXPROJ" || true
          /usr/bin/sed -i '' 's/appicon\.appiconset/AppIcon.appiconset/g' "$PBXPROJ" || true
          /usr/bin/sed -i '' 's/ASSETCATALOG_COMPILER_APPICON_NAME = [^;]*/ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon/' "$PBXPROJ" || true
          echo "=== pbxproj matches ==="
          /usr/bin/grep -n "Assets.xcassets\|AppIcon" "$PBXPROJ" || true

      - name: Quick fix AppIcon
        script: |
          set -e
          APPICON="HelloWorld/Assets.xcassets/AppIcon.appiconset"
          mkdir -p "$APPICON"
          # If Contents.json is missing or invalid, write a minimal valid one
          if [ ! -f "$APPICON/Contents.json" ] || ! plutil -lint "$APPICON/Contents.json" >/dev/null 2>&1; then
            printf '%s\n' '{ "images":[{"idiom":"ios-marketing","size":"1024x1024","scale":"1x","filename":"AppIcon-1024.png"}], "info":{"version":1,"author":"xcode"} }' > "$APPICON/Contents.json"
          fi
          # Ensure the 1024x1024 icon exists
          if [ ! -f "$APPICON/AppIcon-1024.png" ]; then
            /usr/bin/sips -s format png --resampleHeightWidth 1024 1024 /System/Library/CoreServices/DefaultDesktop.jpg --out "$APPICON/AppIcon-1024.png" >/dev/null 2>&1 || true
          fi

      - name: Build IPA
        script: |
          set -e
          xcode-project build-ipa --project "$XCODE_PROJECT" --scheme "$XCODE_SCHEME"

    artifacts:
      - "$CM_BUILD_DIR/*.ipa"
      - "$CM_BUILD_DIR/app.xcarchive"

    publishing:
      app_store_connect:
        auth: integration
        submit_to_testflight: true
        # beta_groups:
        #   - Internal Testers
