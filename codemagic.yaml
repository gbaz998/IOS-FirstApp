workflows:
  ios_to_testflight:
    name: iOS â†’ TestFlight
    integrations:
      app_store_connect: "gbaz 15/9"
    environment:
      xcode: 16.4
      groups: [gbaz]
      vars:
        XCODE_PROJECT: "HelloWorld.xcodeproj"
        XCODE_SCHEME: "HelloWorld"
        BUNDLE_ID: "au.gbaz.app"
    scripts:
      - name: Codesign
        script: |
          set -e
          keychain initialize
          app-store-connect fetch-signing-files "$BUNDLE_ID" --type IOS_APP_STORE --create
          keychain add-certificates
          xcode-project use-profiles
      - name: Info.plist
        script: |
          set -e
          PLIST="IOS-FirstApp/Info.plist"; mkdir -p "$(dirname "$PLIST")"
          [ -f "$PLIST" ] || printf '%s' '<?xml version="1.0" encoding="UTF-8"?><plist version="1.0"><dict/></plist>' > "$PLIST"
          ensure(){ /usr/libexec/PlistBuddy -c "Set :$1 \"$2\"" "$PLIST" 2>/dev/null || /usr/libexec/PlistBuddy -c "Add :$1 string \"$2\"" "$PLIST"; }
          ensure UIMainStoryboardFile Main
          ensure UILaunchStoryboardName LaunchScreen
          ensure NSLocationWhenInUseUsageDescription "We use your location to place discoveries on the map."
          ensure NSMicrophoneUsageDescription "Microphone is used for audio features."
          ensure NSSpeechRecognitionUsageDescription "Speech recognition is used for keyword detection."
      - name: iOS 12 + Assets
        script: |
          set -e
          PBX="HelloWorld.xcodeproj/project.pbxproj"
          /usr/bin/sed -i '' -E 's/IPHONEOS_DEPLOYMENT_TARGET = [0-9]+(\.[0-9]+)?/IPHONEOS_DEPLOYMENT_TARGET = 12.0/g' "$PBX" || true
          CATALOG="assets.xcassets"; APPICON="$CATALOG/AppIcon.appiconset"
          [ -d "$CATALOG" ] || mkdir -p "$CATALOG"
          [ -d "$APPICON" ] || mkdir -p "$APPICON"
          [ -f "$CATALOG/Contents.json" ] || printf '%s\n' '{ "info": { "version": 1, "author": "xcode" } }' > "$CATALOG/Contents.json"
          if [ ! -f "$APPICON/Contents.json" ] || ! plutil -lint "$APPICON/Contents.json" >/dev/null 2>&1; then
            printf '%s\n' '{ "images":[{"idiom":"ios-marketing","size":"1024x1024","scale":"1x","filename":"AppIcon-1024.png"}], "info":{"version":1,"author":"xcode"} }' > "$APPICON/Contents.json"
          fi
          [ -f "$APPICON/AppIcon-1024.png" ] || /usr/bin/sips -s format png --resampleHeightWidth 1024 1024 /System/Library/CoreServices/DefaultDesktop.jpg --out "$APPICON/AppIcon-1024.png" >/dev/null 2>&1 || true
          /usr/bin/sed -i '' 's|HelloWorld/Assets\.xcassets|assets.xcassets|g' "$PBX" || true
          /usr/bin/sed -i '' 's/ASSETCATALOG_COMPILER_APPICON_NAME = [^;]*/ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon/' "$PBX" || true
      - name: Import map icons -> assets.xcassets
        script: |
          set -e
          SRC="HelloWorld/Features/Map/map icons"
          CATALOG="assets.xcassets"
          mkdir -p "$CATALOG"
          IFS=$'\n'
          for f in $(find "$SRC" -type f \( -iname "*.png" -o -iname "*.jpg" \)); do
            base="$(basename "$f")"
            name="${base%.*}"
            safe="$(printf '%s' "$name" | tr '[:upper:]' '[:lower:]' | sed -E 's/[^a-z0-9]+/_/g')"
            dst="$CATALOG/${safe}.imageset"
            mkdir -p "$dst"
            cp -f "$f" "$dst/${safe}.png"
            printf '%s\n' '{ "images":[{ "idiom":"universal","filename":"'"${safe}.png"'","scale":"1x"}], "info":{"version":1,"author":"xcode"} }' > "$dst/Contents.json"
          done
      - name: Auto-bump
        script: |
          set -e
          PLIST="IOS-FirstApp/Info.plist"
          NEW_BUILD=$(date +%Y%m%d%H%M)
          /usr/libexec/PlistBuddy -c "Set :CFBundleVersion $NEW_BUILD" "$PLIST" 2>/dev/null || /usr/libexec/PlistBuddy -c "Add :CFBundleVersion string $NEW_BUILD" "$PLIST"
      - name: Build IPA
        script: |
          set -e
          xcode-project build-ipa --project "$XCODE_PROJECT" --scheme "$XCODE_SCHEME"
          mkdir -p build/ios/ipa
          IPA_SRC=$(find "$CM_BUILD_DIR" -type f -name "*.ipa" | head -n1 || true)
          [ -n "$IPA_SRC" ] && cp -f "$IPA_SRC" build/ios/ipa/HelloWorld.ipa || true
    artifacts:
      - build/ios/ipa/HelloWorld.ipa
      - "$CM_BUILD_DIR/*.ipa"
      - "$CM_BUILD_DIR/app.xcarchive"
    publishing:
      app_store_connect:
        auth: integration
        submit_to_testflight: true

